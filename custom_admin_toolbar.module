<?php

use Drupal\Core\Menu\MenuTreeParameters;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Url;
use Drupal\custom_admin_toolbar\Render\Element\CustomAdminToolbar;
use Drupal\user\Entity\Role;

/**
 * Implements hook_module_implements_alter().
 */
function custom_admin_toolbar_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'toolbar_alter') {
    // Move my_module_form_alter() to the end of the list.
    // \Drupal::moduleHandler()->getImplementationInfo()
    // iterates through $implementations with a foreach loop which PHP iterates
    // in the order that the items were added, so to move an item to the end of
    // the array, we remove it and then add it.
    $group = $implementations['custom_admin_toolbar'];
    unset($implementations['custom_admin_toolbar']);
    $implementations['custom_admin_toolbar'] = $group;
  }
}

/**
 * Implements hook_toolbar_alter().
 */
function custom_admin_toolbar_toolbar_alter(&$items) {
  $config = \Drupal::service('config.factory')->get('custom_admin_toolbar.settings');

  // Determine if the user is user 1, or has a
  // super administrator role since they always
  // get the original, non-custom admin toolbar.
  $is_admin = FALSE;
  $account = \Drupal::currentUser();
  $roles = $account->getRoles();
  foreach ($roles as $role) {
    $role = Role::load($role);
    if ($role->isAdmin() || (int) $account->id() === 1) {
      $is_admin = TRUE;
      break;
    }
  }

  // Override only for non super-admins, depending on the role settings.
  // No selection enables all non-admin roles.
  if (
    ($is_admin === FALSE && !$config->get('roles')) ||
    ($is_admin === FALSE && is_array($config->get('roles')) && array_intersect($config->get('roles'), $roles)))
  {
    unset($items['administration']['tray']['toolbar_administration']['#lazy_builder']);
    unset($items['administration']['tray']['toolbar_administration']['#create_placeholder']);
    // $items['administration']['tray']['toolbar_administration']['#pre_render'] = array('custom_admin_toolbar_prerender_toolbar_administration_tray');
    $items['administration']['tray']['toolbar_administration']['#pre_render'][] = [CustomAdminToolbar::class, 'preRenderTray'];
    $items['administration']['#attached']['library'][] = 'admin_toolbar/toolbar.tree';

    if ($config->get('hide_home')) {
      unset($items['home']);
    }

    if ($config->get('hide_user')) {
      unset($items['user']);
    }
  }
}

/**
 * Adds toolbar-specific attributes to the menu link tree.
 */
function custom_admin_toolbar_tools_menu_navigation_links(array $tree) {
  foreach ($tree as $element) {
    if ($element->subtree) {
      custom_admin_toolbar_tools_menu_navigation_links($element->subtree);
    }
    $link = $element->link;
    $definition = $link->getPluginDefinition();
    $element->options['attributes']['title'] = $link->getDescription();
    $element->options['attributes']['class'][] = 'toolbar-icon';
  }
  return $tree;
}
